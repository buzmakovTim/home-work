{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Error404","Message","props","className","c","message","avatarImage","src","avatar","alt","triangle","messageContent","name","time","messageData","HW1","Affair","rating","affair","priority","low","middle","high","console","log","container","titleContainer","priorityContainer","deleteButtonContainer","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","useState","classNameFilter","setClassNameFilter","setFilter","s","defaultButton","selectedButton","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","e","currentTarget","button","incorrectInput","GreetingContainer","users","addUserCallback","setName","setError","length","trim","HW3","setUsers","userToAdd","v1","push","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","blue","disabled","PreJunior","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.51cdeb8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatarImage\":\"Message_avatarImage__10Spa\",\"messageContent\":\"Message_messageContent__2OkrL\",\"triangle\":\"Message_triangle__37x4H\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputClass\":\"Greeting_inputClass__14GLD\",\"error\":\"Greeting_error__1uvQ8\",\"incorrectInput\":\"Greeting_incorrectInput__7AC4H\",\"button\":\"Greeting_button__24QRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affairs_container__1RINw\",\"titleContainer\":\"Affairs_titleContainer__3gh_O\",\"priorityContainer\":\"Affairs_priorityContainer__2hb-b\",\"deleteButtonContainer\":\"Affairs_deleteButtonContainer__33ykG\",\"low\":\"Affairs_low__1RrbR\",\"middle\":\"Affairs_middle__1oKMT\",\"high\":\"Affairs_high__3bfAG\",\"rating\":\"Affairs_rating__3Hfp4\",\"defaultButton\":\"Affairs_defaultButton__lfX_1\",\"selectedButton\":\"Affairs_selectedButton__2uBjj\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import { disconnect } from 'node:process'\nimport React from 'react'\nimport c from './Message.module.css'\n\ntype TypeMessage = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: TypeMessage) {\n    return (\n        <div className={c.message}>\n            <div className={c.avatarImage}>\n                <img src={props.avatar} alt=\"\"/>\n            </div>\n            <div className={c.triangle}>    \n            </div>\n            <div className={c.messageContent}>\n                <h4>{props.name}</h4>\n                <p>{props.message}</p>\n                <p className={c.time}>{props.time}</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <h3>Homework 1</h3>\n\n            <Message \n                avatar={messageData.avatar} \n                name={messageData.name} \n                message={messageData.message} \n                time={messageData.time} \n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react';\nimport { AffairType } from './HW2';\nimport c from './Affairs.module.css';\nimport { isPropertyAccessExpression } from 'typescript';\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType;\n  deleteAffairCallback: (_id: number) => void;\n};\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id);\n  };\n\n  let rating;\n  switch (props.affair.priority) {\n    case 'low':\n      rating = c.low;\n      break;\n    case 'middle':\n      rating = c.middle;\n      break;\n    case 'high':\n      rating = c.high;\n      break;\n    default:\n      break;\n  }\n\n  //   let rating = c + props.affair.priority;\n  console.log(rating);\n\n  return (\n    <div className={c.container}>\n      <div className={c.titleContainer}>\n        <span>{props.affair.name}</span>\n      </div>\n\n      <div className={c.priorityContainer}>\n        <span className={rating}>[{props.affair.priority}]</span>\n      </div>\n\n      <div className={c.deleteButtonContainer}>\n        <button onClick={deleteCallback}>X</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React, { useState } from 'react';\nimport Affair from './Affair';\nimport { AffairType, FilterType } from './HW2';\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = {\n  // need to fix any\n  data: Array<AffairType>;\n  setFilter: (value: FilterType) => void;\n  deleteAffairCallback: (_id: number) => void;\n};\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ));\n\n  const [classNameFilter, setClassNameFilter] = useState('all'); \n\n  const setAll = () => {\n    props.setFilter('all');\n    setClassNameFilter('all')\n\n  }; // need to fix\n  const setHigh = () => {\n    props.setFilter('high');\n    setClassNameFilter('high')\n  };\n  const setMiddle = () => {\n    props.setFilter('middle');\n    setClassNameFilter('middle')\n  };\n  const setLow = () => {\n    props.setFilter('low');\n    setClassNameFilter('low')\n  };\n  \n  return (\n    <div>\n      {mappedAffairs}\n\n      <button onClick={setAll} className={classNameFilter !== 'all' ? s.defaultButton : s.selectedButton}>All</button>\n      <button onClick={setHigh} className={classNameFilter !== 'high' ? s.defaultButton : s.selectedButton}>High</button>\n      <button onClick={setMiddle} className={classNameFilter !== 'middle' ? s.defaultButton : s.selectedButton}>Middle</button>\n      <button onClick={setLow} className={classNameFilter !== 'low' ? s.defaultButton : s.selectedButton}>Low</button>\n    </div>\n  );\n}\n\nexport default Affairs;\n","import React, { useState } from 'react';\nimport Affairs from './Affairs';\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high';\nexport type AffairType = {\n  _id: number;\n  name: string;\n  priority: AffairPriorityType;\n};\n\nexport type FilterType = 'all' | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  { _id: 1, name: 'React', priority: 'high' },\n  { _id: 2, name: 'anime', priority: 'low' },\n  { _id: 3, name: 'games', priority: 'low' },\n  { _id: 4, name: 'work', priority: 'high' },\n  { _id: 5, name: 'html & css', priority: 'middle' },\n];\n\n// pure helper functions\nexport const filterAffairs = (\n  affairs: Array<AffairType>,\n  filter: FilterType\n): Array<AffairType> => {\n  if (filter === 'all') return affairs;\n  else return affairs.filter((a) => a.priority === filter);\n\n  //   let filtered = affairs;\n  //   if (filter === 'low') {\n  //     filtered = affairs.filter((affair) => affair.priority === 'low');\n  //     return filtered;\n  //   } else if (filter === 'middle') {\n  //     filtered = affairs.filter((affair) => affair.priority === 'middle');\n  //     return filtered;\n  //   } else if (filter === 'high') {\n  //     filtered = affairs.filter((affair) => affair.priority === 'high');\n  //     return filtered;\n  //   } else return affairs;\n};\n\nexport const deleteAffair = (\n  affairs: Array<AffairType>,\n  _id: number\n): Array<AffairType> => {\n  let updated = affairs.filter((affair) => affair._id !== _id);\n  return updated;\n};\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n  const [filter, setFilter] = useState<FilterType>('all');\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = (_id: number) =>\n    setAffairs(deleteAffair(affairs, _id));\n\n  return (\n    <div>\n      <hr />\n      <h3>Homework 2 </h3>\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW2;\n","import React from 'react';\nimport c from './Greeting.module.css';\n\ntype GreetingPropsType = {\n  name: string;\n  setNameCallback: (e: string) => void; // need to fix any\n  addUser: () => void;\n  error: string;\n  totalUsers: number;\n};\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\n) => {\n  const inputClass = error !== '' ? c.error : c.inputClass; // need to fix with (?:)\n\n  return (\n    <div>\n      <input\n        value={name}\n        onChange={(e) => setNameCallback(e.currentTarget.value)}\n        className={inputClass}\n      />\n\n      <button className={c.button} onClick={addUser}>\n        add\n      </button>\n      <span>{totalUsers}</span>\n      <div>\n        <span className={c.incorrectInput}>{error}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React, { useState } from 'react';\nimport Greeting from './Greeting';\nimport { UserType } from './HW3';\n\ntype GreetingContainerPropsType = {\n  users: UserType[];\n  addUserCallback: (name: string) => void;\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n  users,\n  addUserCallback,\n}) => {\n  // деструктуризация пропсов\n  const [name, setName] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const setNameCallback = (e: string) => {\n    setName(e);\n    setError('');\n  };\n  const addUser = () => {\n    if (name.trim() !== '') {\n      addUserCallback(name.trim());\n      setName('');\n    } else {\n      setError('Incorrect input!');\n    }\n\n    //alert(`Hello  ${name}!`);\n  };\n\n  const totalUsers = users.length; // need to fix\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n    />\n  );\n};\n\nexport default GreetingContainer;\n","import React, { useState } from 'react';\nimport GreetingContainer from './GreetingContainer';\nimport { v1 } from 'uuid';\n\n// types\nexport type UserType = {\n  _id: string;\n  name: string;\n};\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<Array<UserType>>([]);\n\n  const addUserCallback = (name: string) => {\n    // need to fix any\n    let userToAdd: UserType = { _id: v1(), name: name };\n    users.push(userToAdd);\n\n    setUsers([...users]); // need to fix\n    console.log('Add user Call Back ' + userToAdd._id + ' ' + userToAdd.name);\n  };\n\n  return (\n    <div>\n      <hr />\n      <h3>Homework 3</h3>\n      {/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback} />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeGreeting/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import { on } from 'node:events'\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        // onChange && onChangeChecked\n        onChange \n        && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked) \n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            <h3>Homework 4</h3>\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Error404 from './pages/Error404'\nimport PreJunior from './pages/PreJunior'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior+',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport { PATH } from './Routes'\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}> \n        <div>\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>Pre-Junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>Junior+</NavLink>\n        </div>\n            <div className={s.block}/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from 'react-router-dom'\n// import s from '../h5/Header.module.css'\n\nfunction HW5() {\n    return (\n        <div> \n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react';\nimport s from './App.module.css';\nimport HW1 from '../../../p2-homeworks/h1/HW1';\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      {/* <div>react homeworks:</div> */}\n      {/* <HW1 />\n      <HW2 />\n      <HW3 />\n      <HW4/> */}\n      <HW5/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__1oUIl\",\"active\":\"Header_active__1dmn0\",\"block\":\"Header_block__3dX0N\",\"header\":\"Header_header__1amup\"};"],"sourceRoot":""}